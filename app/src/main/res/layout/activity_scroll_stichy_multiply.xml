<RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:app="http://schemas.android.com/apk/res-auto"
    android:id="@+id/swipe_layout"
    android:layout_width="match_parent"
    android:layout_height="match_parent">


    <com.cubebox.library.StickyScrollView
        android:id="@+id/stickyview"
        android:layout_width="match_parent"
        android:layout_height="match_parent"
        android:background="@color/white">

        <LinearLayout
            android:layout_width="match_parent"
            android:layout_height="match_parent"
            android:orientation="vertical">

            <TextView
                android:layout_width="fill_parent"
                android:layout_height="wrap_content"
                android:background="@color/white"
                android:padding="20dp"
                android:text="这里canvas.save();和canvas.restore();是两个相互匹配出现的,作用是用来保存画布的状态和取出保存的状态的。这里稍微解释一下, 当我们对画布进行旋转,缩放,平移等操作的时候..."
                android:textColor="@color/gray_much" />

            <TextView
                android:layout_width="fill_parent"
                android:layout_height="wrap_content"
                android:background="@color/white"
                android:padding="20dp"
                android:text="这里canvas.save();和canvas.restore();是两个相互匹配出现的,作用是用来保存画布的状态和取出保存的状态的。这里稍微解释一下, 当我们对画布进行旋转,缩放,平移等操作的时候..."
                android:textColor="@color/gray_much" />

            <FrameLayout
                android:layout_width="fill_parent"
                android:layout_height="100dip"
                android:background="#99ff00ff"
                android:tag="sticky">

                <Button
                    android:id="@+id/mybutton"
                    android:layout_width="wrap_content"
                    android:layout_height="fill_parent"
                    android:text="hello world" />
            </FrameLayout>

            <TextView
                android:layout_width="fill_parent"
                android:layout_height="wrap_content"
                android:background="@color/white"
                android:padding="20dp"
                android:text=" int textWidth=(int)textPaint.measureText; int cardinalX=px-textWidth/2; int cardinalY=py-radius+textHeight; //开始绘制刻度和文字 //每15度一个刻度,每45度一个..."
                android:textColor="@color/gray_much" />

            <TextView
                android:layout_width="fill_parent"
                android:layout_height="wrap_content"
                android:background="@color/white"
                android:padding="20dp"
                android:text="这里canvas.save();和canvas.restore();是两个相互匹配出现的,作用是用来保存画布的状态和取出保存的状态的。这里稍微解释一下, 当我们对画布进行旋转,缩放,平移等操作的时候..."
                android:textColor="@color/gray_much" />

            <LinearLayout
                android:layout_width="match_parent"
                android:layout_height="80dp"
                android:background="@color/blue"
                android:orientation="horizontal"
                android:padding="20dp"
                android:tag="sticky-stickybottom">

                <View
                    android:layout_width="wrap_content"
                    android:layout_height="100dip"
                    android:layout_weight="1"
                    android:background="@color/black" />

                <View
                    android:layout_width="wrap_content"
                    android:layout_height="100dip"
                    android:layout_weight="1"
                    android:background="@color/orange" />
            </LinearLayout>


            <TextView
                android:layout_width="fill_parent"
                android:layout_height="wrap_content"
                android:background="@color/white"
                android:padding="20dp"
                android:text="这里canvas.save();和canvas.restore();是两个相互匹配出现的,作用是用来保存画布的状态和取出保存的状态的。这里稍微解释一下, 当我们对画布进行旋转,缩放,平移等操作的时候..."
                android:textColor="@color/gray_much" />

            <TextView
                android:layout_width="fill_parent"
                android:layout_height="wrap_content"
                android:background="@color/white"
                android:padding="20dp"
                android:text="//canvas.savrdinalX=px-textWidth/2; int cardinalY=py-radius+textHeight; //开始绘制刻度和文字 //每15度一个刻度,每45度一个..."
                android:textColor="@color/gray_much" />

            <TextView
                android:layout_width="fill_parent"
                android:layout_height="wrap_content"
                android:background="@color/white"
                android:padding="20dp"
                android:text="这里canvas.save();和canvas.restore();是两个相互匹配出现的,作用是用来保存画布的状态和取出保存的状态的。这里稍微解释一下, 当我们对画布进行旋转,缩放,平移等操作的时候..."
                android:textColor="@color/gray_much" />

            <FrameLayout
                android:layout_width="fill_parent"
                android:layout_height="120dip"
                android:background="@color/orange"
                android:tag="sticky-nottransparent">

                <Button
                    android:layout_width="wrap_content"
                    android:layout_height="fill_parent"
                    android:text="hello world" />
            </FrameLayout>

            <TextView
                android:layout_width="fill_parent"
                android:layout_height="wrap_content"
                android:background="@color/white"
                android:padding="20dp"
                android:text="这里canvas.save();和canvas.restore();是两个相互匹配出现的,作用是用来保存画布的状态和取出保存的状态的。这里稍微解释一下, 当我们对画布进行旋转,缩放,平移等操作的时候..."
                android:textColor="@color/gray_much" />

            <TextView
                android:layout_width="fill_parent"
                android:layout_height="wrap_content"
                android:background="@color/white"
                android:padding="20dp"
                android:text="这里canvas.save();和canvas.restore();是两个相互匹配出现的,作用是用来保存画布的状态和取出保存的状态的。这里稍微解释一下, 当我们对画布进行旋转,缩放,平移等操作的时候..."
                android:textColor="@color/gray_much" />

            <TextView
                android:layout_width="fill_parent"
                android:layout_height="wrap_content"
                android:background="@color/white"
                android:padding="20dp"
                android:text="这里canvas.save();和canvas.restore();是两个相互匹配出现的,作用是用来保存画布的状态和取出保存的状态的。这里稍微解释一下, 当我们对画布进行旋转,缩放,平移等操作的时候..."
                android:textColor="@color/gray_much" />

            <TextView
                android:layout_width="fill_parent"
                android:layout_height="wrap_content"
                android:background="@color/white"
                android:padding="20dp"
                android:text="这里canvas.save();和canvas.restore();是两个相互匹配出现的,作用是用来保存画布的状态和取出保存的状态的。这里稍微解释一下, 当我们对画布进行旋转,缩放,平移等操作的时候..."
                android:textColor="@color/gray_much" />

            <TextView
                android:layout_width="fill_parent"
                android:layout_height="wrap_content"
                android:background="@color/white"
                android:padding="20dp"
                android:text="这里canvas.save();和canvas.restore();是两个相互匹配出现的,作用是用来保存画布的状态和取出保存的状态的。这里稍微解释一下, 当我们对画布进行旋转,缩放,平移等操作的时候..."
                android:textColor="@color/gray_much" />

            <TextView
                android:layout_width="fill_parent"
                android:layout_height="wrap_content"
                android:background="@color/white"
                android:padding="20dp"
                android:text="这里canvas.save();和canvas.restore();是两个相互匹配出现的,作用是用来保存画布的状态和取出保存的状态的。这里稍微解释一下, 当我们对画布进行旋转,缩放,平移等操作的时候..."
                android:textColor="@color/gray_much" />
        </LinearLayout>

    </com.cubebox.library.StickyScrollView>

    <com.cubebox.library.FloatView
        android:id="@+id/act_scroll_sticky_multiply_floatview"
        android:layout_width="match_parent"
        android:layout_height="match_parent">

        <RelativeLayout
            android:layout_width="match_parent"
            android:layout_height="wrap_content">


            <LinearLayout
                android:id="@+id/float_view_layout3"
                android:layout_width="match_parent"
                android:layout_height="80dp"
                android:layout_below="@+id/float_view_layout"
                android:background="@color/blue"
                android:orientation="horizontal"
                android:padding="20dp"
                android:tag="sticky"
                android:visibility="invisible">

                <View
                    android:id="@+id/act_sticky_btn1"
                    android:layout_width="match_parent"
                    android:layout_height="match_parent"
                    android:layout_weight="1"
                    android:background="@color/black" />

                <View
                    android:id="@+id/act_sticky_btn2"
                    android:layout_width="match_parent"
                    android:layout_height="match_parent"
                    android:layout_weight="1"
                    android:background="@color/orange" />
            </LinearLayout>

            <FrameLayout
                android:id="@+id/float_view_layout"
                android:layout_width="fill_parent"
                android:layout_height="100dip"
                android:background="#99ff00ff"
                android:visibility="invisible">

                <EditText
                    android:layout_width="wrap_content"
                    android:layout_height="fill_parent"
                    android:text="hello world" />
            </FrameLayout>


            <FrameLayout
                android:id="@+id/float_view_layout2"
                android:layout_width="fill_parent"
                android:layout_height="120dip"
                android:layout_below="@+id/float_view_layout3"
                android:background="@color/orange"
                android:tag="sticky"
                android:visibility="invisible">

                <EditText
                    android:layout_width="wrap_content"
                    android:layout_height="fill_parent"
                    android:text="hello world" />
            </FrameLayout>
        </RelativeLayout>
    </com.cubebox.library.FloatView>
</RelativeLayout>